{"version":3,"file":"static/js/396.195e8c07.chunk.js","mappings":"yNAuCA,UAnCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBF,EAAS,MACTF,EAAW,MAFM,mBAKIK,EAAAA,EAAAA,IAAkBT,GALtB,OAKTU,EALS,OAOfN,EAAWM,GAPI,gDAUfJ,EAAS,EAAD,IAVO,yDAAH,qDAahBE,GACD,GAAE,CAACR,IAEJ,IAAMW,EAA6B,KAAb,OAAPR,QAAO,IAAPA,OAAA,EAAAA,EAASS,SAAgBP,EAEvC,OAAQ,0BACFM,IAAU,uEADR,OAEFR,QAFE,IAEFA,OAFE,EAEFA,EAASU,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OAA2B,2BACrC,oCAAYD,MACZ,uBAAIC,MAF0CF,EAApC,MAOrB,C,8LCnCKG,EAAU,mCACVC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACcC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,oCAAiDD,IAD/D,cACCP,EADD,yBAEEA,EAAKA,KAAKW,SAFZ,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACcH,EAAAA,EAAAA,IAAA,UAAaF,EAAb,gCAA6CD,EAA7C,kBAA8DM,IAD5E,cACCb,EADD,yBAEEA,EAAKA,KAAKW,SAFZ,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCV,GAAjC,uFACcM,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BJ,EAA9B,oBAA4CG,IAD1D,cACCP,EADD,yBAEEA,EAAKA,MAFP,kEAKA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA8BX,GAA9B,uFACcM,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BJ,EAA9B,4BAAoDG,IADlE,cACCP,EADD,yBAEEA,EAAKA,KAAKgB,MAFZ,kEAKA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCK,GAAjC,uFACcM,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BJ,EAA9B,4BAAoDG,IADlE,cACCP,EADD,yBAEEA,EAAKA,KAAKW,SAFZ,kE","sources":["components/MovieReviews.jsx","services/api.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setError(null)\n      setReviews(null)\n\n      try {\n        const data = await fetchMovieReviews(movieId)\n\n        setReviews(data)\n\n      } catch (error) {\n        setError(error)\n      }\n    }\n    fetchMovie();\n  }, [movieId])\n\n  const isData = reviews?.length === 0 || error;\n  \n   return (<ul>\n        {isData && <p>We don't have any reviews for this movie :(</p>}\n        {reviews?.map(({id, author, content}) => <li key={id}>\n            <p>Author: {author}</p>\n            <p>{content}</p>\n            </li>\n        )}\n    </ul>\n    )\n};\n\nexport default Reviews","import axios from \"axios\";\n\nconst API_KEY = 'c2adf4092a83a2e23791f3f570392dbd';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  const data = await axios.get(`${BASE_URL}trending/all/day?api_key=${API_KEY}`);\n  return data.data.results\n}\n\nexport async function fetchSearchData(query) {\n  const data = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`);\n  return data.data.results\n}\n\nexport async function fetchMovieDetails(id) {\n  const data = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return data.data\n}\n\nexport async function fetchMovieCast(id) {\n  const data = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n  return data.data.cast\n}\n\nexport async function fetchMovieReviews(id) {\n  const data = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n  return data.data.results\n}\n"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchMovie","fetchMovieReviews","data","isData","length","map","id","author","content","API_KEY","BASE_URL","fetchTrendingMovies","axios","results","fetchSearchData","query","fetchMovieDetails","fetchMovieCast","cast"],"sourceRoot":""}