{"version":3,"file":"static/js/884.7ac7a9bd.chunk.js","mappings":"2OA6DA,UAxDqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAmBjB,IAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBJ,EAAS,MACTF,EAAS,MAFQ,mBAKIO,EAAAA,EAAAA,IAAkBX,GALtB,OAKTY,EALS,OAOfR,EAASQ,GAPM,gDAUfN,EAAS,EAAD,IAVO,yDAAH,qDAahBI,GACD,GAAE,CAACV,KAECG,EAAO,OAAO,KAEnB,IAAQU,EAAuDV,EAAvDU,YAAaC,EAA0CX,EAA1CW,MAAOC,EAAmCZ,EAAnCY,aAAcC,EAAqBb,EAArBa,SAAUC,EAAWd,EAAXc,OAC9CC,EAASb,IAAUF,EACnBgB,EAAQ,oBAAGZ,EAASJ,aAAZ,aAAG,EAAgBiB,YAAnB,QAA2B,UAEzC,OAAQ,2BACDF,IAAU,uFACX,SAAC,KAAD,CAASG,GAAIF,EAAb,sBACA,4BACI,gBAAKG,IAAG,yCAAoCT,GAAeU,IAAI,iBAC/D,4BACI,wBAAKT,KACD,wCAAgBC,MACpB,sCACI,uBAAIC,KACR,oCACI,uBAAIC,EAAOO,KAAI,gBAAEC,EAAF,EAAEA,KAAF,gBAAeA,EAAf,iBAG3B,oDACA,2BACI,SAAC,KAAD,CAASJ,GAAG,OAAOlB,MAAO,CAACiB,KAAMD,GAAjC,mBACA,SAAC,KAAD,CAASE,GAAG,UAAUlB,MAAO,CAACiB,KAAMD,GAApC,yBAEJ,SAAC,EAAAO,SAAD,CAAWC,UAAU,SAAC,IAAD,IAArB,UACI,SAAC,KAAD,QAKX,C,8LCzDKC,EAAU,mCACVC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACcC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,oCAAiDD,IAD/D,cACChB,EADD,yBAEEA,EAAKA,KAAKoB,SAFZ,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACcH,EAAAA,EAAAA,IAAA,UAAaF,EAAb,gCAA6CD,EAA7C,kBAA8DM,IAD5E,cACCtB,EADD,yBAEEA,EAAKA,KAAKoB,SAFZ,kEAKA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCwB,GAAjC,uFACcJ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BM,EAA9B,oBAA4CP,IAD1D,cACChB,EADD,yBAEEA,EAAKA,MAFP,kEAKA,SAAewB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,uFACcJ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BM,EAA9B,4BAAoDP,IADlE,cACChB,EADD,yBAEEA,EAAKA,KAAKyB,MAFZ,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACcJ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BM,EAA9B,4BAAoDP,IADlE,cACChB,EADD,yBAEEA,EAAKA,KAAKoB,SAFZ,kE","sources":["pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import React, { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation, NavLink } from 'react-router-dom';\nimport { Loader } from \"../components/Loader\";\nimport { fetchMovieDetails } from '../services/api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [state, setState] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setError(null)\n      setState(null)\n\n      try {\n        const data = await fetchMovieDetails(movieId)\n\n        setState(data)\n\n      } catch (error) {\n        setError(error)\n      }\n    }\n    fetchMovie();\n  }, [movieId])\n\n  if (!state) return null\n    \n  const { poster_path, title, vote_average, overview, genres } = state;\n  const isData = error || !state;\n  const backLink = location.state?.from ?? '/movies';\n\n  return (<div>\n        {isData && <p>Oops! Something went wrong :( Please, choose another movie</p>}\n        <NavLink to={backLink}>Go back</NavLink>\n        <div>\n            <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"Film poster\" />\n            <div>\n                <h1>{title}</h1>\n                    <p>User score: {vote_average}</p>\n                <h2>Overwiev</h2>\n                    <p>{overview}</p>\n                <h2>Genres</h2>\n                    <p>{genres.map(({name}) => `${name} `)}</p>\n            </div>\n        </div>\n        <h3>Additional information</h3>\n        <ul>\n            <NavLink to=\"cast\" state={{from: backLink}}>Cast</NavLink>\n            <NavLink to=\"reviews\" state={{from: backLink}}>Rewievs</NavLink>\n        </ul>\n        <Suspense  fallback={<Loader />}>\n            <Outlet />\n        </Suspense>  \n    </div>\n    )\n\n};\n\nexport default MovieDetails","import axios from \"axios\";\n\nconst API_KEY = 'c2adf4092a83a2e23791f3f570392dbd';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  const data = await axios.get(`${BASE_URL}trending/all/day?api_key=${API_KEY}`);\n  return data.data.results\n}\n\nexport async function fetchSearchData(query) {\n  const data = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`);\n  return data.data.results\n}\n\nexport async function fetchMovieDetails(id) {\n  const data = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return data.data\n}\n\nexport async function fetchMovieCast(id) {\n  const data = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n  return data.data.cast\n}\n\nexport async function fetchMovieReviews(id) {\n  const data = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n  return data.data.results\n}\n"],"names":["movieId","useParams","useState","state","setState","error","setError","location","useLocation","useEffect","fetchMovie","fetchMovieDetails","data","poster_path","title","vote_average","overview","genres","isData","backLink","from","to","src","alt","map","name","Suspense","fallback","API_KEY","BASE_URL","fetchTrendingMovies","axios","results","fetchSearchData","query","id","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}